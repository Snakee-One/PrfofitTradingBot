import asyncio
import logging

from aiogram import types, Bot, Dispatcher, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, \
    InlineKeyboardButton, ContentType, CallbackQuery, InputMedia
from aiogram.utils.callback_data import CallbackData

import keyboards as kb

TOKEN = "7745940346:AAE4pP2nkvJ0SVsdv-kaTOb14beJAN3GgQo"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher(bot=bot, storage=MemoryStorage())

MSG = "–≠—Ç–æ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏!"


@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    #await bot.send_video_note(message.chat.id, video_note=open('circle.mp4', 'rb'))
    await bot.send_message(user_id,
                           "<strong>–Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –ø–æ–¥–∞—Ä–æ–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∏—Ö —Å–¥–µ–ª–æ–∫,</strong>\n"
                           "<strong>–¥–æ–π–¥–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏ –∑–∞–±–∏—Ä–∞–π</strong>üéÅ\n\n"
                           "‚úîÔ∏è<strong>–°–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –∏ –æ–∑–Ω–∞–∫–∞–º–ª–∏–≤–∞–π—Å—è</strong>‚úîÔ∏è")

    # time.sleep(3)
    await message.answer('–í–∏–¥–µ–æ: <a href="https://www.youtube.com/watch?v=ceFaOulSr7g">‚†Ä</a>',
                         reply_markup=kb.markup2)


fruits = [
    {
        "slug": "apples",
        "display_name": "–û—Ç–∑—ã–≤ 1",
        "image_url": "https://disk.yandex.ru/i/p9fp3WnEJyVYkg"
    },
    {
        "slug": "oranges",
        "display_name": "–û—Ç–∑—ã–≤ 2",
        "image_url": "https://disk.yandex.ru/i/R-ejsVddP3sIlA"
    },
    {
        "slug": "bananas",
        "display_name": "–û—Ç–∑—ã–≤ 3",
        "image_url": "https://disk.yandex.ru/i/RyohwxdXKwxN_A"
    },
    {
        "slug": "lemons",
        "display_name": "–û—Ç–∑—ã–≤ 4",
        "image_url": "https://disk.yandex.ru/i/Pa651XfIwEXCPA"
    },
    {
        "slug": "lemons",
        "display_name": "–û—Ç–∑—ã–≤ 5",
        "image_url": "https://disk.yandex.ru/i/iPXCXJeH_nbh8A"
    },
]

fruits_callback = CallbackData("Fruits", "page")


def get_fruits_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(row_width=3)
    has_next_page = len(fruits) > page + 1
    if page != 0:
        keyboard.add(
            InlineKeyboardButton(
                text="–ù–∞–∑–∞–¥‚óÄÔ∏è",
                callback_data=fruits_callback.new(page=page - 1)
            )
        )
    if has_next_page:
        keyboard.add(
            InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥‚ñ∂Ô∏è",
                callback_data=fruits_callback.new(page=page + 1)
            )
        )
    return keyboard


@dp.callback_query_handler(lambda c: c.data == "reviews")
async def fruits_index(callback: types.CallbackQuery):
    fruit_data = fruits[0]
    caption = f"<b>{fruit_data.get('display_name')}</b>"
    keyboard = get_fruits_keyboard()  # Page: 0

    await bot.send_photo(
        chat_id=callback.from_user.id,
        photo=fruit_data.get("image_url"),
        caption=caption,
        parse_mode="HTML",
        reply_markup=keyboard
    )
    await bot.send_message(callback.from_user.id, '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –æ—Ç–∑—ã–≤—ã –ø–æ —Å—Å—ã–ª–∫–µ:\n'
                                                  '–∏ –Ω–∞–≤–µ—Ä—Ö—É‚§¥Ô∏è', reply_markup=kb.markup5)


@dp.callback_query_handler(fruits_callback.filter())
async def fruit_page_handler(query: CallbackQuery, callback_data: dict):
    page = int(callback_data.get("page"))

    fruit_data = fruits[page]
    caption = f"<b>{fruit_data.get('display_name')}</b>"
    keyboard = get_fruits_keyboard(page)

    photo = InputMedia(type="photo", media=fruit_data.get("image_url"), caption=caption)

    await query.message.edit_media(photo, keyboard)


@dp.callback_query_handler(lambda c: c.data == 'money')
async def money(callback: types.CallbackQuery):
    await bot.send_message(callback.from_user.id, '<strong>–° –∫–∞–∫–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞ —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –≤ USDT?\n'
                                                  '(–Ω–∞–ø–∏—à–∏ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 1000 –∏–ª–∏ 500)\n\n'
                                                  '–ï—Å–ª–∏ —Ç—ã –Ω–æ–≤–∏—á–æ–∫, –Ω–∞–ø–∏—à–∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –¥–ª—è —Ç–µ–±—è —Å—É–º–º—É, —á—Ç–æ–±—ã\n'
                                                  '—É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏—Ç—å—Å—è –≤ –º–æ–∏—Ö —Å–¥–µ–ª–∫–∞—Ö</strong>')
    state = dp.current_state(user=callback.from_user.id)
    await state.set_state("enter_money")


@dp.message_handler(state='enter_money', content_types=ContentType.TEXT)
async def calc(message: types.Message):
    state = dp.current_state(user=message.from_user.id)
    await state.reset_state(True)
    cash = int(message.text)
    if cash < 10000:
        price = cash * 2.3
        vol = cash * 4.2
    else:
        price = cash * 1.5
        vol = cash * 2.7
    await bot.send_message(message.chat.id,
                           f'–ü–æ –º–æ–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å —á–∏—Å—Ç—ã–º–∏ –º–∏–Ω–∏–º—É–º - <strong>{price} USDT</strong>\n\n'
                           f'–¢–∞–∫ –∫–∞–∫ —Å–µ–π—á–∞—Å —Ä—ã–Ω–æ–∫ –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã–π –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π, —Ç–≤–æ–π\n'
                           f'–∑–∞—Ä–∞–±–æ—Ç–æ–∫ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å - <strong>{vol} USDT</strong>\n\n'
                           f'<strong>–î–∞, —ç—Ç–æ –ø–ª—é—Å –∫ —Ç–≤–æ–µ–º—É –¥–µ–ø–æ–∑–∏—Ç—É! –ù–æ —ç—Ç–æ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Ç—ã\n'
                           f'–±—É–¥–µ—à—å —Å—Ç—Ä–æ–≥–æ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–æ–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∏\n'
                           f'—Å–æ–±–ª—é–¥–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.üìà\n\n'
                           f'–¢—ã –¥–æ—à–µ–ª –¥–æ —Ü–µ–ª–∏! –Ø –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –ø–æ–¥–∞—Ä–æ–∫ –∏\n'
                           f'—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–¥–µ–ª–æ–∫</strong>‚¨áÔ∏è', reply_markup=kb.markup6)


@dp.callback_query_handler(lambda c: c.data == "how")
async def how_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    # await bot.send_message(callback_query.from_user.id, '<a href="https://m.youtube.com/watch?v=ceFaOulSr7g">‚†Ä</a>', reply_markup=kb.markup2)
    # await bot.send_message(callback_query.from_user.id, 'BlaBlaBla <a href="https://m.youtube.com/watch?v=ceFaOulSr7g">‚†Ä</a>')
    # await bot.send_video(callback_query.from_user.id, 'https://www.youtube.com/watch?v=dQw4w9WgXcQ', reply_markup=kb.markup2)


@dp.callback_query_handler(lambda c: c.data == "more")
async def how_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_photo(callback_query.from_user.id, 'https://disk.yandex.ru/i/0xhZPUBM2n9TSQ',
                         caption='‚úîÔ∏è<strong> –õ–ï–ì–ö–û –ó–ê–†–ê–ë–û–¢–ê–¢–¨</strong>\n'
                                 '–ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏–∑—É—á–∞—Ç—å —Ä—ã–Ω–æ–∫, –ø—Ä–æ–≤–µ–¥—É –ø–æ –≤—Å–µ–º —à–∞–≥–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏\n\n'
                                 '‚úîÔ∏è <strong>–ú–ì–ù–û–í–ï–ù–ù–´–ô –°–ò–ì–ù–ê–õ</strong>\n'
                                 '–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∫–µ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –º–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–µ—à—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏—Ç\n\n'
                                 '‚úîÔ∏è <strong>–ë–ï–ó –ü–û–¢–ï–†–ò –î–ï–ü–û–ó–ò–¢–ê</strong> \n'
                                 '<strong>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏</strong>, —Ç—ã –ø–æ–ª–∞–≥–∞–µ—à—å—Å—è –Ω–∞ —á–µ—Ç–∫—É—é —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –æ—Ç –ª—É—á—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤\n\n'
                                 '‚úîÔ∏è <strong>–ü–û–°–¢–û–Ø–ù–ù–´–ô –î–û–•–û–î</strong>\n'
                                 '–ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –º–µ–Ω—è—é—â–∏–º—Å—è —É—Å–ª–æ–≤–∏—è–º —Ä—ã–Ω–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º —É—Å–ø–µ—à–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —É–∂–µ –±–æ–ª–µ–µ 10 –ª–µ—Ç',
                         reply_markup=kb.markup3)


@dp.callback_query_handler(lambda c: c.data == "for_who")
async def how_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_photo(callback_query.from_user.id, 'https://disk.yandex.ru/i/jDRD5eYXsrMxIQ',
                         caption=
                                 'üôã‚Äç‚ôÇÔ∏è <strong>–ù–û–í–ò–ß–û–ö</strong>\n'
                                 '–¢–µ–±–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å—è –ø–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞—Ç—å,\n'
                                 '–ª–∏—á–Ω–æ —è –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —à–∞–≥–∏\n'
                                 '–¢—ã –ø–æ–ª—É—á–∞–µ—à—å —Ü–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ—Ç –º–µ–Ω—è - –æ–ø—ã—Ç–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞ –∏ —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!üòâ\n\n'
                                 'üòé <strong>–î–ï–ô–°–¢–í–£–Æ–©–ò–ô –¢–†–ï–ô–î–ï–†</strong>\n'
                                 '–í—ã —É–∂–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä—ã–Ω–æ–∫, –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ\n'
                                 '—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑.', reply_markup=kb.markup4)


@dp.callback_query_handler(lambda c: c.data == "get")
async def how_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "<strong>–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –≤–∏–¥–µ–æ!</strong>")
    await bot.send_video(callback_query.from_user.id, video=open('last.mp4', 'rb'))
    await bot.send_message(callback_query.from_user.id,
                           '<strong>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è! –¢—ã –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω—Ü–∞ –∏ –ø–æ–ª—É—á–∞–µ—à—å –≤–∏–ø\n'
                           '—Å–¥–µ–ª–∫—É –ª–∏—á–Ω–æ –æ—Ç –º–µ–Ω—è</strong>üéÅ\n\n'
                           '–ö—Å—Ç–∞—Ç–µ, —è —É–∂–µ —Ç–µ–±–µ –Ω–∞–ø–∏—Å–∞–ª –∏–ª–∏ –Ω–∞–ø–∏—à—É —á—É—Ç—å –ø–æ–∑–∂–µ. –ï—Å–ª–∏ –Ω–µ\n'
                           '—Ç–µ—Ä–ø–∏—Ç—å—Å—è –Ω–∞—á–∞—Ç—å —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç—É - –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É\n'
                           '<strong>"–ü–û–õ–£–ß–ò–¢–¨ –°–î–ï–õ–ö–£"</strong> –∏ –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è!üòâ\n'
                           , reply_markup=kb.markup7)


@dp.callback_query_handler(lambda c: c.data == "ready")
async def how_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_video(callback_query.from_user.id, video=open('last.mp4', 'rb'))
    await bot.send_message(callback_query.from_user.id,
                           '<strong>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è! –¢—ã –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω—Ü–∞ –∏ –ø–æ–ª—É—á–∞–µ—à—å –≤–∏–ø\n'
                           '—Å–¥–µ–ª–∫—É –ª–∏—á–Ω–æ –æ—Ç –º–µ–Ω—è</strong>üéÅ\n\n'
                           '–ö—Å—Ç–∞—Ç–µ, —è —É–∂–µ —Ç–µ–±–µ –Ω–∞–ø–∏—Å–∞–ª –∏–ª–∏ –Ω–∞–ø–∏—à—É —á—É—Ç—å –ø–æ–∑–∂–µ. –ï—Å–ª–∏ –Ω–µ\n'
                           '—Ç–µ—Ä–ø–∏—Ç—å—Å—è –Ω–∞—á–∞—Ç—å —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç—É - –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É\n'
                           '<strong>"–ü–û–õ–£–ß–ò–¢–¨ –°–î–ï–õ–ö–£"</strong> –∏ –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è!üòâ\n\n'
                           '<srtong>–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –≤–∏–¥–µ–æ!</strong>', reply_markup=kb.markup7)
    for i in range(10):
        await asyncio.sleep(60 * 60 * 24)
        await bot.send_message(callback_query.from_user.id, MSG)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
